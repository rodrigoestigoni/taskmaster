services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "8445:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    container_name: taskmaster_backend
    networks:
      - app_net
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_node_modules:/app/node_modules 
      - static_volume:/usr/share/nginx/html/taskmaster/staticfiles
      - media_volume:/usr/share/nginx/html/taskmaster/mediafiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - PUBLIC_URL=/taskmaster
      - REACT_APP_API_URL=/taskmaster/api
    ports:
      - "8081:80"
      - "8446:443"
    networks:
      - app_net
    depends_on:
      - backend
    container_name: taskmaster_frontend

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=taskmaster
      - POSTGRES_USER=taskmaster_user
      - POSTGRES_PASSWORD=senha_segura_aqui
    networks:
      - app_net

  # nginx:
  #   build: ./nginx
  #   volumes:
  #     - static_volume:/usr/share/nginx/html/taskmaster/staticfiles
  #     - media_volume:/usr/share/nginx/html/taskmaster/mediafiles
  #   ports:
  #     - "8081:80"
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - app_net

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_node_modules:

networks:
  app_net:
    external: true