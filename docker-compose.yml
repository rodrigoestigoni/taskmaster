services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - 8000
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - app-network
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - PUBLIC_URL=/taskmaster
      - REACT_APP_API_URL=https://ultimoingresso.com.br/taskmaster/api
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=taskmaster
      - POSTGRES_USER=taskmaster_user
      - POSTGRES_PASSWORD=senha_segura_aqui
    networks:
      - app-network

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/share/nginx/html/taskmaster/staticfiles
      - media_volume:/usr/share/nginx/html/taskmaster/mediafiles
    ports:
      - "8081:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge